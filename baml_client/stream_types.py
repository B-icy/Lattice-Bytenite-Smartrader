# ----------------------------------------------------------------------------
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml
#
# ----------------------------------------------------------------------------

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code using: baml-cli generate
# baml-cli is available with the baml package.

import typing
import typing_extensions
from pydantic import BaseModel, ConfigDict

import baml_py

from . import types

StreamStateValueT = typing.TypeVar('StreamStateValueT')
class StreamState(BaseModel, typing.Generic[StreamStateValueT]):
    value: StreamStateValueT
    state: typing_extensions.Literal["Pending", "Incomplete", "Complete"]
# #########################################################################
# Generated classes (26)
# #########################################################################

class ComprehensiveReport(BaseModel):
    executive_summary: typing.Optional[str] = None
    price_analysis: typing.Optional["PriceAnalysis"] = None
    fundamental_analysis: typing.Optional["FundamentalAnalysis"] = None
    technical_analysis: typing.Optional["TechnicalIndicators"] = None
    market_comparison: typing.Optional["MarketComparison"] = None
    risk_assessment: typing.Optional[str] = None
    investment_outlook: typing.Optional[str] = None
    key_recommendations: typing.List[str]

class EconomicIndicator(BaseModel):
    name: typing.Optional[str] = None
    value: typing.Optional[str] = None
    date: typing.Optional[str] = None
    change: typing.Optional[str] = None
    significance: typing.Optional[str] = None

class FundamentalAnalysis(BaseModel):
    pe_ratio: typing.Optional[float] = None
    forward_pe_ratio: typing.Optional[float] = None
    peg_ratio: typing.Optional[float] = None
    price_to_book: typing.Optional[float] = None
    dividend_yield: typing.Optional[float] = None
    fifty_two_week_high: typing.Optional[float] = None
    fifty_two_week_low: typing.Optional[float] = None

class InsiderActivitySummary(BaseModel):
    total_buy_volume: typing.Optional[int] = None
    total_sell_volume: typing.Optional[int] = None
    net_insider_activity: typing.Optional[float] = None
    key_insiders: typing.List[str]
    activity_trend: typing.Optional[str] = None

class InsiderAnalysisReport(BaseModel):
    ticker: typing.Optional[str] = None
    recent_transactions: typing.List["InsiderTrade"]
    activity_summary: typing.Optional["InsiderActivitySummary"] = None
    significance_assessment: typing.Optional[str] = None
    key_insights: typing.List[str]

class InsiderTrade(BaseModel):
    name: typing.Optional[str] = None
    title: typing.Optional[str] = None
    transaction_type: typing.Optional[str] = None
    shares: typing.Optional[int] = None
    price: typing.Optional[float] = None
    value: typing.Optional[float] = None
    transaction_date: typing.Optional[str] = None
    filing_date: typing.Optional[str] = None
    security_type: typing.Optional[str] = None

class MarketComparison(BaseModel):
    ticker: typing.Optional[str] = None
    benchmark_ticker: typing.Optional[str] = None
    outperformance_percent: typing.Optional[float] = None
    beta: typing.Optional[float] = None
    correlation: typing.Optional[float] = None
    relative_strength: typing.Optional[str] = None

class MarketConditionsAnalysisReport(BaseModel):
    market_overview: typing.Optional["MarketOverview"] = None
    major_indices: typing.List["MarketIndex"]
    economic_indicators: typing.List["EconomicIndicator"]
    sector_performance: typing.List["SectorPerformance"]
    outlook: typing.Optional[str] = None
    key_insights: typing.List[str]

class MarketIndex(BaseModel):
    symbol: typing.Optional[str] = None
    name: typing.Optional[str] = None
    current_value: typing.Optional[float] = None
    change_percent: typing.Optional[float] = None
    volume: typing.Optional[int] = None

class MarketOverview(BaseModel):
    overall_market_sentiment: typing.Optional[str] = None
    vix_level: typing.Optional[float] = None
    market_breadth: typing.Optional[str] = None
    key_drivers: typing.List[str]

class MarketSentiment(BaseModel):
    overall_sentiment: typing.Optional[str] = None
    sentiment_score: typing.Optional[float] = None
    sources: typing.List["SentimentSource"]
    sentiment_trend: typing.List[str]

class NewsAnalysisReport(BaseModel):
    ticker: typing.Optional[str] = None
    articles: typing.List["NewsArticle"]
    sentiment_analysis: typing.Optional["NewsSentimentAnalysis"] = None
    summary: typing.Optional[str] = None
    key_insights: typing.List[str]

class NewsArticle(BaseModel):
    title: typing.Optional[str] = None
    content: typing.Optional[str] = None
    published_date: typing.Optional[str] = None
    source: typing.Optional[str] = None
    url: typing.Optional[str] = None
    sentiment_score: typing.Optional[float] = None
    relevance_score: typing.Optional[float] = None

class NewsSentimentAnalysis(BaseModel):
    overall_sentiment: typing.Optional[str] = None
    sentiment_trend: typing.List[str]
    key_themes: typing.List[str]
    market_impact_assessment: typing.Optional[str] = None

class OptionsFlow(BaseModel):
    put_call_ratio: typing.Optional[float] = None
    unusual_activity: typing.List[str]
    institutional_sentiment: typing.Optional[str] = None

class PriceAnalysis(BaseModel):
    ticker: typing.Optional[str] = None
    period_analyzed: typing.Optional[str] = None
    total_return_percent: typing.Optional[float] = None
    volatility: typing.Optional[float] = None
    max_price: typing.Optional[float] = None
    min_price: typing.Optional[float] = None
    average_volume: typing.Optional[int] = None
    trend_direction: typing.Optional[str] = None
    key_insights: typing.List[str]

class PricePoint(BaseModel):
    date: typing.Optional[str] = None
    open: typing.Optional[float] = None
    high: typing.Optional[float] = None
    low: typing.Optional[float] = None
    close: typing.Optional[float] = None
    volume: typing.Optional[int] = None
    adj_close: typing.Optional[float] = None

class Resume(BaseModel):
    name: typing.Optional[str] = None
    email: typing.Optional[str] = None
    experience: typing.List[str]
    skills: typing.List[str]

class RiskAssessment(BaseModel):
    overall_risk_level: typing.Optional[str] = None
    volatility_trends: typing.List[str]
    risk_factors: typing.List[str]
    hedging_recommendations: typing.List[str]

class SectorPerformance(BaseModel):
    sector_name: typing.Optional[str] = None
    performance_percent: typing.Optional[float] = None
    leading_stocks: typing.List[str]
    trend: typing.Optional[str] = None

class SentimentAnalysisReport(BaseModel):
    ticker: typing.Optional[str] = None
    market_sentiment: typing.Optional["MarketSentiment"] = None
    options_flow: typing.Optional["OptionsFlow"] = None
    social_sentiment: typing.Optional[str] = None
    analyst_sentiment: typing.Optional[str] = None
    key_insights: typing.List[str]

class SentimentSource(BaseModel):
    source_type: typing.Optional[str] = None
    sentiment_score: typing.Optional[float] = None
    confidence_level: typing.Optional[float] = None
    key_indicators: typing.List[str]

class StockData(BaseModel):
    ticker: typing.Optional[str] = None
    company_name: typing.Optional[str] = None
    current_price: typing.Optional[float] = None
    currency: typing.Optional[str] = None
    market_cap: typing.Optional[str] = None

class TechnicalIndicators(BaseModel):
    sma_20: typing.Optional[float] = None
    sma_50: typing.Optional[float] = None
    rsi: typing.Optional[float] = None
    bollinger_upper: typing.Optional[float] = None
    bollinger_lower: typing.Optional[float] = None
    support_level: typing.Optional[float] = None
    resistance_level: typing.Optional[float] = None

class VolatilityAnalysisReport(BaseModel):
    metrics: typing.Optional["VolatilityMetrics"] = None
    risk_assessment: typing.Optional["RiskAssessment"] = None
    outlook: typing.Optional[str] = None
    key_insights: typing.List[str]

class VolatilityMetrics(BaseModel):
    ticker: typing.Optional[str] = None
    period_analyzed: typing.Optional[str] = None
    historical_volatility: typing.Optional[float] = None
    implied_volatility: typing.Optional[float] = None
    beta: typing.Optional[float] = None
    sharpe_ratio: typing.Optional[float] = None
    max_drawdown: typing.Optional[float] = None
    volatility_regime: typing.Optional[str] = None

# #########################################################################
# Generated type aliases (0)
# #########################################################################
