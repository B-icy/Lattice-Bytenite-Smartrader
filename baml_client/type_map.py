# ----------------------------------------------------------------------------
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml
#
# ----------------------------------------------------------------------------

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code using: baml-cli generate
# baml-cli is available with the baml package.

from . import types
from . import stream_types


type_map = {

    "types.ComprehensiveReport": types.ComprehensiveReport,
    "stream_types.ComprehensiveReport": stream_types.ComprehensiveReport,

    "types.EconomicIndicator": types.EconomicIndicator,
    "stream_types.EconomicIndicator": stream_types.EconomicIndicator,

    "types.FundamentalAnalysis": types.FundamentalAnalysis,
    "stream_types.FundamentalAnalysis": stream_types.FundamentalAnalysis,

    "types.InsiderActivitySummary": types.InsiderActivitySummary,
    "stream_types.InsiderActivitySummary": stream_types.InsiderActivitySummary,

    "types.InsiderAnalysisReport": types.InsiderAnalysisReport,
    "stream_types.InsiderAnalysisReport": stream_types.InsiderAnalysisReport,

    "types.InsiderTrade": types.InsiderTrade,
    "stream_types.InsiderTrade": stream_types.InsiderTrade,

    "types.MarketComparison": types.MarketComparison,
    "stream_types.MarketComparison": stream_types.MarketComparison,

    "types.MarketConditionsAnalysisReport": types.MarketConditionsAnalysisReport,
    "stream_types.MarketConditionsAnalysisReport": stream_types.MarketConditionsAnalysisReport,

    "types.MarketIndex": types.MarketIndex,
    "stream_types.MarketIndex": stream_types.MarketIndex,

    "types.MarketOverview": types.MarketOverview,
    "stream_types.MarketOverview": stream_types.MarketOverview,

    "types.MarketSentiment": types.MarketSentiment,
    "stream_types.MarketSentiment": stream_types.MarketSentiment,

    "types.NewsAnalysisReport": types.NewsAnalysisReport,
    "stream_types.NewsAnalysisReport": stream_types.NewsAnalysisReport,

    "types.NewsArticle": types.NewsArticle,
    "stream_types.NewsArticle": stream_types.NewsArticle,

    "types.NewsSentimentAnalysis": types.NewsSentimentAnalysis,
    "stream_types.NewsSentimentAnalysis": stream_types.NewsSentimentAnalysis,

    "types.OptionsFlow": types.OptionsFlow,
    "stream_types.OptionsFlow": stream_types.OptionsFlow,

    "types.PriceAnalysis": types.PriceAnalysis,
    "stream_types.PriceAnalysis": stream_types.PriceAnalysis,

    "types.PricePoint": types.PricePoint,
    "stream_types.PricePoint": stream_types.PricePoint,

    "types.Resume": types.Resume,
    "stream_types.Resume": stream_types.Resume,

    "types.RiskAssessment": types.RiskAssessment,
    "stream_types.RiskAssessment": stream_types.RiskAssessment,

    "types.SectorPerformance": types.SectorPerformance,
    "stream_types.SectorPerformance": stream_types.SectorPerformance,

    "types.SentimentAnalysisReport": types.SentimentAnalysisReport,
    "stream_types.SentimentAnalysisReport": stream_types.SentimentAnalysisReport,

    "types.SentimentSource": types.SentimentSource,
    "stream_types.SentimentSource": stream_types.SentimentSource,

    "types.StockData": types.StockData,
    "stream_types.StockData": stream_types.StockData,

    "types.TechnicalIndicators": types.TechnicalIndicators,
    "stream_types.TechnicalIndicators": stream_types.TechnicalIndicators,

    "types.VolatilityAnalysisReport": types.VolatilityAnalysisReport,
    "stream_types.VolatilityAnalysisReport": stream_types.VolatilityAnalysisReport,

    "types.VolatilityMetrics": types.VolatilityMetrics,
    "stream_types.VolatilityMetrics": stream_types.VolatilityMetrics,


}